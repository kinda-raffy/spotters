#!/usr/bin/env python

import rospy
from nav_msgs.msg import Path
from geometry_msgs.msg import PoseStamped

class DummyPathPublisher:
    def __init__(self):
        self.path_publisher = rospy.Publisher("/spotters/navigator/path", Path, queue_size=10)
        rospy.logdebug("Publishing path to /spotters/navigator/path")

    def publish_path(self):
        path = Path()
        path.header.frame_id = "body"
        p = []
        for i in range(1, 5):
            pose = PoseStamped()

            neg = 1
            if i % 2 == 0:
                neg = -1

            # Set the header of the pose
            pose.header.frame_id = "body"
            pose.header.stamp = rospy.Time.now()

            # Set the position of the pose
            pose.pose.position.x = 1.0
            pose.pose.position.y = neg * 1.0
            pose.pose.position.z = 0.0

            # Set the orientation of the pose (here we keep it as no rotation)
            pose.pose.orientation.x = 0.0
            pose.pose.orientation.y = 0.0
            pose.pose.orientation.z = 0.0
            pose.pose.orientation.w = 1.0

            # Add the pose to the path
            p.append(pose)

        # Publish the path
        path.poses = p
        self.path_publisher.publish(path)
        rospy.logdebug("Published path")


if __name__ == '__main__':
    rospy.init_node('dummy_trajectory_action_server_and_publisher', log_level=rospy.DEBUG)
    rospy.loginfo("Starting dummy_trajectory_action_server_and_publisher...")
    # server = DummyTrajectoryActionServer()
    publisher = DummyPathPublisher()
    rate = rospy.Rate(0.1)
    rospy.sleep(3)
    publisher.publish_path()

    # while not rospy.is_shutdown():
    #     publisher.publish_path()
    #     rate.sleep()